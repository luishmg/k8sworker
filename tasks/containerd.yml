- name: Containerd - Create worker directories
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop:
    '{{ containerd_directories }}'

- name: Containerd - Download containerd tarball's
  get_url:
    url: '{{ item }}'
    dest: /tmp/containerd/
    mode: '0755'
  loop: 
    - '{{ containerd_cri_url + "crictl-" + containerd_cri_version + "-linux-amd64.tar.gz" }}'
    - '{{ containerd_url + "containerd-" + containerd_version + "-linux-amd64.tar.gz" }}'

- name: Containerd - Extracting containerd files
  unarchive:
    src: '{{ item.src }}'
    dest: '{{ item.dst }}'
    remote_src: true
    extra_opts:
      '{{ item.extra.split(",") | default("") }}'
  loop:
    - { src: '{{ "/tmp/containerd/crictl-" + containerd_cri_version + "-linux-amd64.tar.gz" }}', dst: "/usr/local/bin/", extra: "" }
    - { src: '{{ "/tmp/containerd/containerd-" + containerd_version + "-linux-amd64.tar.gz" }}', dst: "/bin", extra: "--strip,1,bin/" }

- name: Containerd - Download runc bin
  get_url:
    url: '{{ item.src }}'
    dest: '{{ item.dst }}'
    mode: '0755'
  loop: 
    - { src: '{{ containerd_runc_url + containerd_runc_version + "/runc.amd64" }}', dst: "/usr/local/bin/runc" }

- name: Containerd - Cleaning containerd downloaded files
  file:
    path: '/tmp/containerd'
    state: absent

- name: Containerd - Adding containerd configuration and Service files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dst + item.src.split("/")[1].split(".")[0] + "." + item.src.split("/")[1].split(".")[1] }}'
    owner: root
    mode: '0750' 
  loop:
    '{{ containerd_templates }}'
