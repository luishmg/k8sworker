#!/bin/bash

INTERNAL_IP=$(ip addr show eth1 | grep "inet " | awk '{print $2}' | cut -d / -f 1)
INSTANCE=$(hostname --short)

cat > ${INSTANCE}-csr.json <<EOF
{
  "CN": "system:node:${INSTANCE}",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "{{ cert_country }}",
      "L": "{{ cert_city }}",
      "O": "system:nodes",
      "OU": "Kubernetes worker certificate",
      "ST": "{{ cert_state }}"
    }
  ]
}
EOF

/usr/local/bin/cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -hostname=${INSTANCE},${HOSTNAME},${INTERNAL_IP} \
  -profile=kubernetes \
  ${INSTANCE}-csr.json | /usr/local/bin/cfssljson -bare ${INSTANCE}

/usr/local/bin/cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -hostname=${INSTANCE},${HOSTNAME},${INTERNAL_IP} \
  -profile=kubernetes \
  ${INSTANCE}-csr.json | /usr/local/bin/cfssljson -bare ${INSTANCE}

/usr/local/bin/kubectl config set-cluster k8s-sysadmin \
  --certificate-authority=${CERT_DIR}ca.pem \
  --embed-certs=true \
  --server=https://{{ loadbalancer_ip }}:6443 \
  --kubeconfig=kubeconfig

/usr/local/bin/kubectl config set-credentials system:node:${INSTANCE} \
  --client-certificate=${INSTANCE}.pem \
  --client-key=${INSTANCE}-key.pem \
  --embed-certs=true \
  --kubeconfig=kubeconfig

/usr/local/bin/kubectl config set-context default \
  --cluster=k8s-sysadmin \
  --user=system:node:${INSTANCE} \
  --kubeconfig=kubeconfig

/usr/local/bin/kubectl config use-context default --kubeconfig=kubeconfig

cat <<EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: "/var/lib/kubelet/pki/ca.pem"
authorization:
  mode: Webhook
clusterDomain: "cluster.local"
clusterDNS:
  - "{{ k8s_cluster_dns }}"
resolvConf: "/run/systemd/resolve/resolv.conf"
runtimeRequestTimeout: "15m"
tlsCertFile: "/var/lib/kubelet/pki/${INSTANCE}.pem"
tlsPrivateKeyFile: "/var/lib/kubelet/pki/${INSTANCE}-key.pem"
EOF
# podCIDR: "${INTERNAL_IP}"